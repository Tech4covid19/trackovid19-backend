{
    "service": {
        "service": "trackovid19-backend",
        "serviceObject": {
            "name": "trackovid19-backend"
        },
        "provider": {
            "stage": "dev",
            "variableSyntax": "\\${([^{}]+?)}",
            "name": "aws",
            "runtime": "nodejs12.x",
            "region": "eu-west-1",
            "versionFunctions": true,
            "remoteFunctionData": null,
            "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                    "ServerlessDeploymentBucket": {
                        "Type": "AWS::S3::Bucket",
                        "Properties": {
                            "BucketEncryption": {
                                "ServerSideEncryptionConfiguration": [
                                    {
                                        "ServerSideEncryptionByDefault": {
                                            "SSEAlgorithm": "AES256"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "ServerlessDeploymentBucketPolicy": {
                        "Type": "AWS::S3::BucketPolicy",
                        "Properties": {
                            "Bucket": {
                                "Ref": "ServerlessDeploymentBucket"
                            },
                            "PolicyDocument": {
                                "Statement": [
                                    {
                                        "Action": "s3:*",
                                        "Effect": "Deny",
                                        "Principal": "*",
                                        "Resource": [
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "arn:",
                                                        {
                                                            "Ref": "AWS::Partition"
                                                        },
                                                        ":s3:::",
                                                        {
                                                            "Ref": "ServerlessDeploymentBucket"
                                                        },
                                                        "/*"
                                                    ]
                                                ]
                                            }
                                        ],
                                        "Condition": {
                                            "Bool": {
                                                "aws:SecureTransport": false
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "ServerLogGroup": {
                        "Type": "AWS::Logs::LogGroup",
                        "Properties": {
                            "LogGroupName": "/aws/lambda/trackovid19-backend-dev-server"
                        }
                    },
                    "IamRoleLambdaExecution": {
                        "Type": "AWS::IAM::Role",
                        "Properties": {
                            "AssumeRolePolicyDocument": {
                                "Version": "2012-10-17",
                                "Statement": [
                                    {
                                        "Effect": "Allow",
                                        "Principal": {
                                            "Service": [
                                                "lambda.amazonaws.com"
                                            ]
                                        },
                                        "Action": [
                                            "sts:AssumeRole"
                                        ]
                                    }
                                ]
                            },
                            "Policies": [
                                {
                                    "PolicyName": {
                                        "Fn::Join": [
                                            "-",
                                            [
                                                "trackovid19-backend-dev",
                                                "lambda"
                                            ]
                                        ]
                                    },
                                    "PolicyDocument": {
                                        "Version": "2012-10-17",
                                        "Statement": [
                                            {
                                                "Effect": "Allow",
                                                "Action": [
                                                    "logs:CreateLogStream",
                                                    "logs:CreateLogGroup"
                                                ],
                                                "Resource": [
                                                    {
                                                        "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trackovid19-backend-dev*:*"
                                                    }
                                                ]
                                            },
                                            {
                                                "Effect": "Allow",
                                                "Action": [
                                                    "logs:PutLogEvents"
                                                ],
                                                "Resource": [
                                                    {
                                                        "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trackovid19-backend-dev*:*:*"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ],
                            "Path": "/",
                            "RoleName": {
                                "Fn::Join": [
                                    "-",
                                    [
                                        "trackovid19-backend-dev",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        "lambdaRole"
                                    ]
                                ]
                            }
                        }
                    },
                    "ServerLambdaFunction": {
                        "Type": "AWS::Lambda::Function",
                        "Properties": {
                            "Code": {
                                "S3Bucket": {
                                    "Ref": "ServerlessDeploymentBucket"
                                },
                                "S3Key": "serverless/trackovid19-backend/dev/1584304769935-2020-03-15T20:39:29.935Z/trackovid19-backend.zip"
                            },
                            "FunctionName": "trackovid19-backend-dev-server",
                            "Handler": "server.handler",
                            "MemorySize": 1024,
                            "Role": {
                                "Fn::GetAtt": [
                                    "IamRoleLambdaExecution",
                                    "Arn"
                                ]
                            },
                            "Runtime": "nodejs12.x",
                            "Timeout": 6
                        },
                        "DependsOn": [
                            "ServerLogGroup",
                            "IamRoleLambdaExecution"
                        ]
                    },
                    "ServerLambdaVersionZSFoFswWF0gHa3QnRU8KIjz8Xb8E4xAeRnr4DCbqgg": {
                        "Type": "AWS::Lambda::Version",
                        "DeletionPolicy": "Retain",
                        "Properties": {
                            "FunctionName": {
                                "Ref": "ServerLambdaFunction"
                            },
                            "CodeSha256": "vZE4X9AUJkNr7r3b5bExlzIkOr5zTAL2Q3gvdu20RmQ="
                        }
                    },
                    "ApiGatewayRestApi": {
                        "Type": "AWS::ApiGateway::RestApi",
                        "Properties": {
                            "Name": "dev-trackovid19-backend",
                            "EndpointConfiguration": {
                                "Types": [
                                    "EDGE"
                                ]
                            },
                            "Policy": ""
                        }
                    },
                    "ApiGatewayResourceProxyVar": {
                        "Type": "AWS::ApiGateway::Resource",
                        "Properties": {
                            "ParentId": {
                                "Fn::GetAtt": [
                                    "ApiGatewayRestApi",
                                    "RootResourceId"
                                ]
                            },
                            "PathPart": "{proxy+}",
                            "RestApiId": {
                                "Ref": "ApiGatewayRestApi"
                            }
                        }
                    },
                    "ApiGatewayMethodAny": {
                        "Type": "AWS::ApiGateway::Method",
                        "Properties": {
                            "HttpMethod": "ANY",
                            "RequestParameters": {},
                            "ResourceId": {
                                "Fn::GetAtt": [
                                    "ApiGatewayRestApi",
                                    "RootResourceId"
                                ]
                            },
                            "RestApiId": {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "ApiKeyRequired": false,
                            "AuthorizationType": "NONE",
                            "Integration": {
                                "IntegrationHttpMethod": "POST",
                                "Type": "AWS_PROXY",
                                "Uri": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":lambda:path/2015-03-31/functions/",
                                            {
                                                "Fn::GetAtt": [
                                                    "ServerLambdaFunction",
                                                    "Arn"
                                                ]
                                            },
                                            "/invocations"
                                        ]
                                    ]
                                }
                            },
                            "MethodResponses": []
                        }
                    },
                    "ApiGatewayMethodProxyVarAny": {
                        "Type": "AWS::ApiGateway::Method",
                        "Properties": {
                            "HttpMethod": "ANY",
                            "RequestParameters": {},
                            "ResourceId": {
                                "Ref": "ApiGatewayResourceProxyVar"
                            },
                            "RestApiId": {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "ApiKeyRequired": false,
                            "AuthorizationType": "NONE",
                            "Integration": {
                                "IntegrationHttpMethod": "POST",
                                "Type": "AWS_PROXY",
                                "Uri": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":lambda:path/2015-03-31/functions/",
                                            {
                                                "Fn::GetAtt": [
                                                    "ServerLambdaFunction",
                                                    "Arn"
                                                ]
                                            },
                                            "/invocations"
                                        ]
                                    ]
                                }
                            },
                            "MethodResponses": []
                        }
                    },
                    "ApiGatewayDeployment1584304766932": {
                        "Type": "AWS::ApiGateway::Deployment",
                        "Properties": {
                            "RestApiId": {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "StageName": "dev"
                        },
                        "DependsOn": [
                            "ApiGatewayMethodAny",
                            "ApiGatewayMethodProxyVarAny"
                        ]
                    },
                    "ServerLambdaPermissionApiGateway": {
                        "Type": "AWS::Lambda::Permission",
                        "Properties": {
                            "FunctionName": {
                                "Fn::GetAtt": [
                                    "ServerLambdaFunction",
                                    "Arn"
                                ]
                            },
                            "Action": "lambda:InvokeFunction",
                            "Principal": "apigateway.amazonaws.com",
                            "SourceArn": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:",
                                        {
                                            "Ref": "AWS::Partition"
                                        },
                                        ":execute-api:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":",
                                        {
                                            "Ref": "ApiGatewayRestApi"
                                        },
                                        "/*/*"
                                    ]
                                ]
                            }
                        }
                    }
                },
                "Outputs": {
                    "ServerlessDeploymentBucketName": {
                        "Value": {
                            "Ref": "ServerlessDeploymentBucket"
                        }
                    },
                    "ServerLambdaFunctionQualifiedArn": {
                        "Description": "Current Lambda function version",
                        "Value": {
                            "Ref": "ServerLambdaVersionZSFoFswWF0gHa3QnRU8KIjz8Xb8E4xAeRnr4DCbqgg"
                        }
                    },
                    "ServiceEndpoint": {
                        "Description": "URL of the service endpoint",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "https://",
                                    {
                                        "Ref": "ApiGatewayRestApi"
                                    },
                                    ".execute-api.",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ".",
                                    {
                                        "Ref": "AWS::URLSuffix"
                                    },
                                    "/dev"
                                ]
                            ]
                        }
                    }
                }
            },
            "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                    "ServerlessDeploymentBucket": {
                        "Type": "AWS::S3::Bucket",
                        "Properties": {
                            "BucketEncryption": {
                                "ServerSideEncryptionConfiguration": [
                                    {
                                        "ServerSideEncryptionByDefault": {
                                            "SSEAlgorithm": "AES256"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "ServerlessDeploymentBucketPolicy": {
                        "Type": "AWS::S3::BucketPolicy",
                        "Properties": {
                            "Bucket": {
                                "Ref": "ServerlessDeploymentBucket"
                            },
                            "PolicyDocument": {
                                "Statement": [
                                    {
                                        "Action": "s3:*",
                                        "Effect": "Deny",
                                        "Principal": "*",
                                        "Resource": [
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "arn:",
                                                        {
                                                            "Ref": "AWS::Partition"
                                                        },
                                                        ":s3:::",
                                                        {
                                                            "Ref": "ServerlessDeploymentBucket"
                                                        },
                                                        "/*"
                                                    ]
                                                ]
                                            }
                                        ],
                                        "Condition": {
                                            "Bool": {
                                                "aws:SecureTransport": false
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "Outputs": {
                    "ServerlessDeploymentBucketName": {
                        "Value": {
                            "Ref": "ServerlessDeploymentBucket"
                        }
                    }
                }
            },
            "vpc": {}
        },
        "pluginsData": {},
        "functions": {
            "server": {
                "handler": "server.handler",
                "events": [
                    {
                        "http": {
                            "path": "",
                            "method": "any",
                            "integration": "AWS_PROXY"
                        }
                    },
                    {
                        "http": {
                            "path": "{proxy+}",
                            "method": "any",
                            "integration": "AWS_PROXY"
                        }
                    }
                ],
                "name": "trackovid19-backend-dev-server",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs12.x",
                "vpc": {},
                "versionLogicalId": "ServerLambdaVersionZSFoFswWF0gHa3QnRU8KIjz8Xb8E4xAeRnr4DCbqgg"
            }
        },
        "serviceFilename": "serverless.yml",
        "layers": {},
        "isDashboardMonitoringPreconfigured": false,
        "artifact": "/Users/christianchostak/trackovid19-backend/.serverless/trackovid19-backend.zip"
    },
    "package": {
        "artifactDirectoryName": "serverless/trackovid19-backend/dev/1584304769935-2020-03-15T20:39:29.935Z",
        "artifact": "trackovid19-backend.zip"
    }
}